# Introduction
# This is an example properties file to run a dockerized version of kibana.
# All of the properties in the mesos-starter project are overridable.


# Required application name for Spring
spring.application.name=kibana-docker

# Mesos framework name
mesos.framework.name=kibana-docker

# Mesos settings
mesos.master=zk://${mesos.zookeeper.server}/mesos
# mesos.zookeeper.server=$MASTER:2181 # Usually injected

# ES location
# elasticsearch.http=http://$SLAVE0:9200 # Usually injected

# Task resources
mesos.resources.cpus=0.5
mesos.resources.mem=256
mesos.resources.scale=3
mesos.resources.ports.UI_5061=ANY

# Docker image
mesos.docker.image=kibana:latest
mesos.docker.network=HOST

# Command to run
mesos.uri[0]=https://gist.githubusercontent.com/philwinder/592a1ab2db40431c1b08/raw/kibana.yml
mesos.command=mv $MESOS_SANDBOX/kibana.yml /opt/kibana/config/kibana.yml ; kibana --port=$UI_5061 --elasticsearch ${elasticsearch.http}

# Log level
logging.level.com.containersolutions.mesos=DEBUG

# Task HealthChecks (Will kill executors that don't respond) (Note: HealthChecks do not work in Mesos 0.25.0, 0.24.0 or 0.23.0)
# See https://issues.apache.org/jira/browse/MESOS-3738  and  https://issues.apache.org/jira/browse/MESOS-3136
# And HTTP healthchecks still don't work: https://issues.apache.org/jira/browse/MESOS-2533
mesos.healthCheck.command=curl --retry 0 -s localhost:$UI_5061 > /dev/null
